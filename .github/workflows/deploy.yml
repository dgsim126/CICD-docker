name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        env:
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
        with:
          host: ${{ secrets.EC2_HOST }} # EC2의 주소
          username: ${{ secrets.EC2_USERNAME }} # EC2 접속 username
          key: ${{ secrets.EC2_PRIVATE_KEY }} # EC2의 Key 파일의 내부 텍스트
          envs: APPLICATION_PROPERTIES
          script_stop: true # 아래 script 중 실패하는 명령이 하나라도 있으면 실패로 처리
          script: |
            cd /home/ubuntu/github-actions-practice
            git pull origin main

            # src/main/resources 디렉토리가 존재하지 않으면 생성
            mkdir -p src/main/resources

            # 환경 변수 값 확인 (디버깅용)
            echo "=== APPLICATION_PROPERTIES 내용 ==="
            echo "$APPLICATION_PROPERTIES"
            echo "=================================="

            # application.yml 파일 생성
            echo "$APPLICATION_PROPERTIES" > src/main/resources/application.yml
            cat src/main/resources/application.yml # 파일 내용 확인

            # JDK 확인
            java -version || echo "JDK가 설치되지 않았습니다."

            # Gradle 빌드 실행
            ./gradlew clean build || { echo "Gradle 빌드 실패"; exit 1; }

            # 빌드된 JAR 파일 확인
            echo "=== 빌드된 JAR 파일 목록 ==="
            ls -l build/libs/
            echo "============================"

            # 기존 실행 중인 프로세스 종료
            sudo fuser -k -n tcp 8080 || true

            # 실행 중인 Java 프로세스 확인 및 종료
            PID=$(ps aux | grep '[j]ava -jar' | awk '{print $2}')
            if [ -n "$PID" ]; then
              echo "기존 프로세스 종료: $PID"
              kill -9 $PID
            fi

            # 애플리케이션 실행
            JAR_FILE=$(ls build/libs/*SNAPSHOT.jar | head -n 1)
            if [ -f "$JAR_FILE" ]; then
              echo "JAR 파일 실행: $JAR_FILE"
              nohup java -jar "$JAR_FILE" > ./output.log 2>&1 &
            else
              echo "ERROR: 실행할 JAR 파일이 존재하지 않습니다!"
              exit 1
            fi

            # 실행 로그 출력
            sleep 5
            echo "=== 실행 로그 ==="
            tail -n 50 ./output.log

#          script: |
#            cd /home/ubuntu/github-actions-practice # 여기 경로는 자신의 EC2에 맞는 경로로 재작성하기
#            rm -rf src/main/resources/application.yml
#            git pull origin main
#            mkdir -p src/main/resources # src/main/resources 디렉토리가 존재하지 않으면 생성
#            echo "$APPLICATION_PROPERTIES" > src/main/resources/application.yml
#
#            ./gradlew clean build
#            sudo fuser -k -n tcp 8080 || true # || true를 붙인 이유는 8080에 종료시킬 프로세스가 없더라도 실패로 처리하지 않기 위해서이다.
#            nohup java -jar build/libs/*SNAPSHOT.jar > ./output.log 2>&1 &